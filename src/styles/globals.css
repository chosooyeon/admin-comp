@import 'tailwindcss';

@font-face {
  font-family: 'KBFGDisplayM';
  src: url('/fonts/KBFGDISPLAYM.woff') format('opentype');
  font-weight: normal;
  font-style: normal;
}

:root {
  /* Red Colors */
  --color-red-default: oklch(65.02% 0.196 27.54);
  --color-red-text: oklch(53.49% 0.234 27.54);

  /* Orange Colors */
  --color-orange-default: oklch(71.84% 0.155 49.77);
  --color-orange-text: oklch(64.89% 0.173 49.77);

  /* Green Colors */
  --color-green-default: oklch(70.49% 0.164 159.03);
  --color-green-text: oklch(58.18% 0.135 159.03);

  /* Blue Colors */
  --color-blue-default: oklch(67.76% 0.137 261.11);
  --color-blue-text: oklch(60.93% 0.154 261.11);

  /* Black Colors */
  --color-black: oklch(0% 0 0);

  /* Gray Scale */
  --color-gray-50: oklch(11.83% 0 0);
  --color-gray-100: oklch(27.54% 0.018 262.23);
  --color-gray-150: oklch(34.95% 0.018 262.23);
  --color-gray-200: oklch(42.36% 0.018 262.23);
  --color-gray-300: oklch(49.77% 0.018 262.23);
  --color-gray-350: oklch(57.18% 0.018 262.23);
  --color-gray-400: oklch(64.59% 0.018 262.23);
  --color-gray-500: oklch(72% 0.018 262.23);
  --color-gray-550: oklch(77.43% 0.009 262.23);
  --color-gray-600: oklch(87.84% 0.005 262.23);
  --color-gray-700: oklch(93.53% 0.002 262.23);
  --color-gray-750: oklch(95.45% 0 0);
  --color-gray-800: oklch(97.37% 0 0);
  --color-gray-850: oklch(98.69% 0 0);

  /* White Colors */
  --color-white: oklch(100% 0 0);
}

@theme {
  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-yellow-10: oklch(0.9886 0.0238 99.09);
  --color-yellow-40: oklch(0.9414 0.1111 98.18);
  --color-yellow-70: oklch(0.9148 0.1709 99.32);
  --color-yellow-100: oklch(0.8868 0.182186 95.3305);
  --color-yellow-200: oklch(0.8555 0.174878 88.0084);
  --color-yellow-300: oklch(0.8389 0.1678 82.75);

  --color-primary: oklch(0.546 0.245 262.881);
  --color-secondary: oklch(0.929 0.013 255.508);
  --color-danger: oklch(0.577 0.245 27.325);
  --color-warning: oklch(0.724 0.176 56.467);
  --color-info: oklch(0.898 0 89.876);
}

@layer components {
  .btn-primary {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-violet-500);
    padding-inline: --spacing(5);
    padding-block: --spacing(2);
    font-weight: var(--font-weight-semibold);
    color: var(--color-white);
    box-shadow: var(--shadow-md);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-700);
      }
    }
  }
  @keyframes scale-up {
    from {
      transform: scale(0);
    }
    to {
      transform: scale(1);
    }
  }
  
  .scale-up {
    animation: scale-up 0.3s ease-out forwards;
  }

  @keyframes scroll {
    from {
      transform: translateX(100%);
    }
    to {
      transform: translateX(-100%);
    }
  }

  .move-scroll {
    animation: scroll 20s linear infinite;
  }
  
  /* 속도 변형 클래스 */
  .move-scroll-slow {
    animation: scroll 30s linear infinite;
  }
  
  .move-scroll-fast {
    animation: scroll 10s linear infinite;
  }

  @keyframes bounce {
    0%, 80%, 100% { 
      transform: translateY(0);
    }
    40% { 
      transform: translateY(-10px);
    }
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: 'KBFGDisplayM', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
}
